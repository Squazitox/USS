<?xml version="1.0" encoding="utf-8"?>
<doc>
<assembly><name>Fable.SimpleHttp</name></assembly>
<members>
<member name="M:Fable.SimpleHttp.Http.post(System.String,System.String)">
<summary>
 Safely sends a POST request and returns a tuple(status code * response text). This function does not throw.
</summary>
</member>
<member name="M:Fable.SimpleHttp.Http.patch(System.String,System.String)">
<summary>
 Safely sends a PUT request and returns a tuple(status code * response text). This function does not throw.
</summary>
</member>
<member name="M:Fable.SimpleHttp.Http.delete(System.String)">
<summary>
 Safely sends a DELETE request and returns a tuple(status code * response text). This function does not throw.
</summary>
</member>
<member name="M:Fable.SimpleHttp.Http.put(System.String,System.String)">
<summary>
 Safely sends a PUT request and returns a tuple(status code * response text). This function does not throw.
</summary>
</member>
<member name="M:Fable.SimpleHttp.Http.get(System.String)">
<summary>
 Safely sends a GET request and returns a tuple(status code * response text). This function does not throw.
</summary>
</member>
<member name="M:Fable.SimpleHttp.Http.send(Fable.SimpleHttp.HttpRequest)">
<summary>
 Sends the request to the server, this function does not throw
</summary>
</member>
<member name="M:Fable.SimpleHttp.Http.content(Fable.SimpleHttp.BodyContent,Fable.SimpleHttp.HttpRequest)">
<summary>
 Sets the body content of the request
</summary>
</member>
<member name="M:Fable.SimpleHttp.Http.overrideResponseType(Fable.SimpleHttp.ResponseTypes,Fable.SimpleHttp.HttpRequest)">
<summary>
 Change the expected response type from the server
</summary>
</member>
<member name="M:Fable.SimpleHttp.Http.overrideMimeType(System.String,Fable.SimpleHttp.HttpRequest)">
<summary>
 Specifies a MIME type other than the one provided by the server to be used instead when interpreting the data being transferred in a request. This may be used, for example, to force a stream to be treated and parsed as &quot;text/xml&quot;, even if the server does not report it as such.
</summary>
</member>
<member name="M:Fable.SimpleHttp.Http.withCredentials(System.Boolean,Fable.SimpleHttp.HttpRequest)">
<summary>
 Enables cross-site credentials such as cookies
</summary>
</member>
<member name="M:Fable.SimpleHttp.Http.headers(Microsoft.FSharp.Collections.FSharpList{Fable.SimpleHttp.Header},Fable.SimpleHttp.HttpRequest)">
<summary>
 Appends a list of headers to the request configuration
</summary>
</member>
<member name="M:Fable.SimpleHttp.Http.header(Fable.SimpleHttp.Header,Fable.SimpleHttp.HttpRequest)">
<summary>
 Appends a header to the request configuration
</summary>
</member>
<member name="M:Fable.SimpleHttp.Http.method(Fable.SimpleHttp.HttpMethod,Fable.SimpleHttp.HttpRequest)">
<summary>
 Sets the Http method of the request
</summary>
</member>
<member name="M:Fable.SimpleHttp.Http.request(System.String)">
<summary>
 Starts the configuration of the request with the specified url
</summary>
</member>
<member name="M:Fable.SimpleHttp.FormData.appendNamedBlob(System.String,System.String,Browser.Types.Blob,Browser.Types.FormData)">
<summary>
 Appends a blog to the form data
</summary>
</member>
<member name="M:Fable.SimpleHttp.FormData.appendBlob(System.String,Browser.Types.Blob,Browser.Types.FormData)">
<summary>
 Appends a blog to the form data
</summary>
</member>
<member name="M:Fable.SimpleHttp.FormData.appendNamedFile(System.String,System.String,Browser.Types.File,Browser.Types.FormData)">
<summary>
 Appends a named file to the form data
</summary>
</member>
<member name="M:Fable.SimpleHttp.FormData.appendFile(System.String,Browser.Types.File,Browser.Types.FormData)">
<summary>
 Appends a file to the form data
</summary>
</member>
<member name="M:Fable.SimpleHttp.FormData.append(System.String,System.String,Browser.Types.FormData)">
<summary>
 Appends a key-value pair to the form data
</summary>
</member>
<member name="M:Fable.SimpleHttp.FormData.create">
<summary>
 Creates a new FormData object
</summary>
</member>
<member name="M:Fable.SimpleHttp.FileReader.readFileAsText(Browser.Types.File)">
<summary>
 Asynchronously reads the blob data content as string
</summary>
</member>
<member name="M:Fable.SimpleHttp.FileReader.readBlobAsText(Browser.Types.Blob)">
<summary>
 Asynchronously reads the blob data content as string
</summary>
</member>
<member name="T:Fable.SimpleHttp.FileReader">
<summary>
 Utility functions to work with blob and file APIs.
</summary>
</member>
<member name="M:Fable.SimpleHttp.File.fromText(System.String,System.String)">
<summary>
 Creates a File from the given input string and file name
</summary>
</member>
<member name="M:Fable.SimpleHttp.Blob.fromText(System.String)">
<summary>
 Creates a Blob from the given input string
</summary>
</member>
</members>
</doc>
